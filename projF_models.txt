ModelA:

model = tf.keras.Sequential()

model.add(layers.Dense(200,
          input_shape=(2*chords_on_either_side, chord_array_len)))

model.add(layers.Dropout(0.2))
model.add(layers.Dense(300))
model.add(layers.Dropout(0.4))

model.add(layers.Flatten())
model.add(layers.Dense(192))

model.add(layers.Activation('softmax'))


ModelB:


model = tf.keras.Sequential()
model.add(layers.LSTM(512,activation='tanh',recurrent_activation='sigmoid',return_sequences=True, input_shape=(2 * chords_on_either_side, chord_array_len)))
model.add(layers.Dropout(0.2))
model.add(layers.LSTM(256,activation='tanh',recurrent_activation='sigmoid',return_sequences=False))
model.add(layers.Dropout(0.2))
model.add(layers.Dense(chord_array_len))
#model.add(layers.Dense(len(chord_array_len)))
model.add(layers.Activation('softmax'))


ModelC:

model = tf.keras.Sequential()
model.add(layers.LSTM(512,activation='tanh',recurrent_activation='sigmoid',return_sequences=True, input_shape=(2 * chords_on_either_side, chord_array_len)))
model.add(layers.Dropout(0.15))
model.add(layers.LSTM(256,activation='tanh',recurrent_activation='sigmoid',return_sequences=False))
model.add(layers.Dropout(0.15))
model.add(layers.Dense(chord_array_len))
model.add(layers.Activation('softmax'))


ModelD:

model = tf.keras.Sequential()
#model.add(layers.LSTM(512,activation='tanh',recurrent_activation='sigmoid',return_sequences=True, input_shape=(2 * chords_on_either_side, chord_array_len)))
model.add(layers.GRU(512, activation='tanh', recurrent_activation='sigmoid', return_sequences=True, return_state=False, input_shape=(2 * chords_on_either_side, chord_array_len)))
model.add(layers.Dropout(0.15))
#model.add(layers.LSTM(256,activation='tanh',recurrent_activation='sigmoid',return_sequences=False))
model.add(layers.GRU(256,activation='tanh',recurrent_activation='sigmoid',return_sequences=False))
model.add(layers.Dropout(0.15))
model.add(layers.Dense(chord_array_len))
model.add(layers.Activation('softmax'))

ModelF:


model = tf.keras.Sequential()
model.add(layers.LSTM(100, return_sequences=True,input_shape=(2 * chords_on_either_side, chord_array_len)))
model.add(layers.LSTM(100))
model.add(layers.Dense(100, activation='relu'))
model.add(layers.Dense(chord_array_len))
model.add(layers.Activation('softmax'))

ModelG:

model = tf.keras.Sequential()
#model.add(layers.LSTM(512,activation='tanh',recurrent_activation='sigmoid',return_sequences=True, input_shape=(2 * chords_on_either_side, chord_array_len)))
model.add(layers.GRU(512, activation='tanh', recurrent_activation='hard_sigmoid',use_bias=True, return_sequences=True, return_state=False, input_shape=(2 * chords_on_either_side, chord_array_len)))
model.add(layers.Dropout(0.2))
#model.add(layers.LSTM(256,activation='tanh',recurrent_activation='sigmoid',return_sequences=False))
model.add(layers.GRU(512,activation='tanh',recurrent_activation='sigmoid',return_sequences=False))
model.add(layers.Dropout(0.2))
model.add(layers.Dense(chord_array_len))
model.add(layers.Activation('softmax'))

